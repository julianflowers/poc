---
title: "flu"
format: 
    html:
        toc: true
        toc-location: right
        fig-width: 8
        fig-height: 6
    docx: 
        fig-width: 8
        fig-height: 6
    pdf: 
       fig-width: 8
       fig-height: 6
editor: visual
execute: 
  warning: false
  message: false
  cache: false
---

```{r}
#| label: setup
#| include: false

needs(data.table, tidyverse, conflicted)

conflicts_prefer(base::intersect, 
dplyr::filter, 
dplyr::select())

rates <- fread("/Users/julianflowers/poc/data/pop_rates.csv")

pops <- fread("/Users/julianflowers/poc/data/populations.csv")


indicators <- fread("/Users/julianflowers/poc/data/regional_counts.csv")

theme_set(ggthemes::theme_base() + theme(text = element_text(size = 9), panel.background = element_blank()))

```

```{r}
#| label: flu vaccinations

flu <- indicators |> select(Region, age_band, contains("flu"))
flu_rates <- rates |>
    filter(Indicator == "flu")

 
 head(flu)


```


## Compare regions

Using KSA population as standard rate

To do this will use the `phe_dsr` function from the `PHEindicatormethods` package from CRAN (see DSR vignette)

```{r}
#| label: generate reference population

## first load PHEindicatormethods and epitools

needs(PHEindicatormethods, epitools)

## calculate gender, age-specific populations for KSA
## 

ksa_pop_f <- pops |> select(age_band, Female) |>
    group_by(age_band) |>
    reframe(sum_pop = sum(Female))

## 
```

## Calculate coverage

```{r}
#| label: crude rates

options(digits = 2, scipen = 999)

flu_coverage <- flu_rates |>
    group_by(gender, Region) |>
    reframe(tot_vacc = sum(count, na.rm = TRUE), 
    reg_pop = sum(pop))
flu_coverage <- phe_proportion(flu_coverage, x = tot_vacc, n = reg_pop) 



```

## Visualise

```{r}

flu_coverage |>
    ggplot() +
    geom_col(aes(Region, value, fill = gender), position = position_dodge(width = 1)) +
    geom_linerange(aes(Region, ymin = lowercl, ymax = uppercl, group = gender), position = position_dodge(width = 1)) +
    labs(title = "Flu vaccination coverage", 
         y = "Coverage (%)", 
         x = "") +
    ggthemes::theme_base() +
    theme(plot.title.position = "plot", 
          axis.text.x = element_text(angle = 45, hjust = 1, )) +
    scale_y_continuous(label = scales::percent) +
    scale_fill_discrete(type = c("red", "blue"))
        

```

## Age-standarised coverage

Note

```{r}
#| label: calculate asr for female

## which region - gender combinations have data for 17 age bands?
## 
## 

ksa_pop_f

flu_nest <- flu_coverage |>
    nest_by(Region, gender)

flu_nest$data[[1]]
    
flu_dsrs <- flu_nest |>
    mutate(ds_rates = list(epitools::ageadjust.direct(count = data$tot_vacc, pop = data$reg_pop, stdpop = ksa_pop_f$sum_pop))) |>
    unnest_wider(ds_rates) |>
    select(-data) 


flu_dsrs |>
    ggplot() +
    geom_col(aes(Region, adj.rate, fill = gender), position = position_dodge(width = 1)) +
    geom_linerange(aes(Region, ymin = lci, ymax = uci, group = gender), position = position_dodge(width = 1)) +
    labs(title = "Standardised flu vaccination coverage", 
         y = "Coverage (%)", 
         x = "") +
    theme(plot.title.position = "plot", 
          axis.text.x = element_text(angle = 45, hjust = 1), 
          panel.background = element_blank()) +
    scale_fill_discrete(type = c("red", "blue")) +
    scale_y_continuous(label = scales::percent)


```
