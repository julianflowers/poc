{
  "hash": "ed502512a74aafbb387d77673bbd2ff5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating lookups and mapping geographical areas\"\nauthor: \"Julian Flowers\"\nformat: html\neditor: visual\nexecute: \n  cache: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n\n### Creating a lookup table for KSA regions and health directorates\n\n1.  Population estimates by age, gender and region - downloaded from detailed census data 2022. source: <https://portal.saudicensus.sa/portal/public/1/15/101464?type=TABLE;> translated into English using ChatGPT4o.\n\n2.  This gives populations for 13 regions; smoking and injury date is based on health directorates - 20 units.\n\n3.  For these analyses aggregated directorates to regions to enable rate calculations\n\n4.  To map directorates to regions following steps were undertaken:\n\n    -   Shape file for KSA regional boundaries obtained from ...\n\n    -   Directorate based locations of smoking cessation clinics were scraped from <https://www.moh.gov.sa/en/Ministry/Projects/TCP/Pages/default.aspx>\n\n    -   Locations were spatially joined to KSA regional boundaries to create a region \\<-\\> directorate lookup\n\n5.  Naming systems differed between datasets so renaming and recoding necessary\n\n\n\n```{mermaid}\n%%| label: fig-comp\n%%| fig-cap: \"Comparative analysis\"\n%%| cache: true\n\nflowchart LR\n\nA[Comparison] --> B[Within population] \nB --> C[Over time] --> I[Against standard or target]\nC --> J[Slope / regression coefficient]\nB --> K[Within subgroups e.g. age, sex, SES]\nA --> D[Between populations]\nD --> E[Cross-sectional variation]\nD --> F[Compare summary trends]\nD --> G[Compare trend in variation]\n\nclassDef green fill:#9f6,stroke:#333,stroke-width:2px;\n     classDef orange fill:#f96,stroke:#333,stroke-width:4px;\n     class D,e green\n     class B orange\n\n```\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"yutannihilation/ggsflabel\")\nneeds(tidyverse, data.table, readxl, myScrapers, sf, curl, ggsflabel)\n\npops <- fread(\"/Users/julianflowers/Library/CloudStorage/GoogleDrive-julian.flowers12@gmail.com/My Drive/Saudi/data/pop_ests.csv\")\n\nregion_names <- pops$Region |> unique()\n\nregion_names |>\n    enframe()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 x 2\n    name value                    \n   <int> <chr>                    \n 1     1 Al Bahah                 \n 2     2 Al Jawf                  \n 3     3 Al Hudud ash Shamaliyah  \n 4     4 Ar Riyadh                \n 5     5 Al Qasim                 \n 6     6 Al Madinah al Munawwarah \n 7     7 Al Mintaqah ash Sharqiyah\n 8     8 Tabuk                    \n 9     9 Jazan                    \n10    10 Ha'il                    \n11    11 'Asir                    \n12    12 Makkah al Mukarramah     \n13    13 Najran                   \n```\n\n\n:::\n\n```{.r .cell-code}\n## region names for injury data (NB only 12 names)\ndf_r <- read_xlsx(\"/Users/julianflowers/spha/data/fwdatastrategypocpublichealthframeworkindicators/Nonfatal Hospitalizations for Injuries data 2023 (8-7-2024).xlsx\") |> pluck(\"Region\") |> unique()\n\n## directorate names for smoking data\nsmok <- read_csv(\"/Users/julianflowers/spha/data/fwdatastrategypocpublichealthframeworkindicators/Smoking 2022.csv\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://www.moh.gov.sa/en/Ministry/Projects/TCP/Pages/default.aspx\"\n\nscc_dir <- get_page_links(url) %>%\n  .[159:178] \n\nsc_dir_links <- paste0(\"https://www.moh.gov.sa\", scc_dir)\n\nsc_dir_names <- sc_dir_links |>\n  basename()\n\n## extract google maps link of scc for each region and create data frame\nsc_loc <- map(sc_dir_links, get_page_links) %>%\n  map(\\(x) x[grepl(\"https://goo.gl\", x)]) %>%\n    set_names(., sc_dir_names) |>\n  enframe() |>\n    mutate(name = str_remove(name, \".aspx\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_coordinates_from_google_maps <- function(url) {\n  # Follow the redirect to get the final URL\n  url <- url\n  response <- HEAD(url, config(followlocation = TRUE))\n  final_url <- response$url\n  \n  # Use a regular expression to find the coordinates in the final URL\n  match <- str_match(final_url, \"@(-?\\\\d+\\\\.\\\\d+),(-?\\\\d+\\\\.\\\\d+)\")\n  if (!is.na(match[1,2]) && !is.na(match[1,3])) {\n    latitude <- as.numeric(match[1,2])\n    longitude <- as.numeric(match[1,3])\n    return(list(latitude = latitude, longitude = longitude))\n  } else {\n    return(NULL)\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsc_coords <- sc_loc |>\n  unnest(value) |>\n  mutate(ll = map(value, get_coordinates_from_google_maps, .progress = TRUE))\n\n## create table of sc clinic locations \nsc_ll <- sc_coords |>\n    unnest_wider(ll)\n\n## convert to sf file (need to remove missing coordinate values)\n\nsc_ll_sf <- sc_ll |>\n    drop_na() |>\n    st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsa_shp <- curl_download(\"https://data.humdata.org/dataset/41ce9023-1d21-4549-a485-94316200aba0/resource/a0188b1b-2f40-4f27-8a43-25913a7378ca/download/sau_adm_gadm_20210525_shp.zip\", destfile = tempfile())\n\ntmpd <- tempdir()\n\nsa_shp_1 <- curl_download(\"https://data.humdata.org/dataset/41ce9023-1d21-4549-a485-94316200aba0/resource/99834c81-ad34-415e-91c5-af053d8e55b4/download/sau_capp_adm1_1m_ocha.zip\", destfile = tempfile())\n\n#sa_pop_d <- curl_download(\"https://data.humdata.org/dataset/14b288ca-1855-4025-9f01-41cba548e6f6/resource/44baa2f6-b6d8-4018-b9c6-fd81b493ec22/download/sau_general_2020_geotiff.zip\", destfile = tempfile())\n\nsa_shp <- unzip(sa_shp, exdir = tmpd)\n\nsa_shp_1 <- unzip(sa_shp_1, exdir = tmpd)\n\n#sa_tif <- unzip(sa_pop_d, exdir = tmpd)\n\nshps <- fs::dir_ls(tmpd, regexp = \"shp$\")\n\n## boundary polygon file\nsa_bound <- read_sf(shps[2]) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsa_bound |>\n    ggplot() +\n    geom_sf(fill = \"grey90\") +\n    geom_sf_label_repel(aes(label = ADM1_EN)) +\n    geom_sf(data = sc_ll_sf, aes(colour = name)) +\n    theme_void() +\n    scale_colour_viridis_d(option = \"turbo\", name = \"Directorates\")\n```\n\n::: {.cell-output-display}\n![SCC location map with regional boundaries](lookups_files/figure-pdf/fig-scc-1.pdf){#fig-scc fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreg_dir_lu <- sa_bound |>\n    st_join(sc_ll_sf) |>\n    st_drop_geometry() |>\n    select(ADM1_EN, name) |>\n    group_by(ADM1_EN, name) |>\n    summarise(n = n()) |>\n    ungroup() |>\n    group_by(name) |>\n    arrange(name) |>\n    filter(n == max(n)) |>\n    select(name, everything())\n```\n:::\n\n\n\nNow we want to attach region names tpo the smoking data so we can join with population data in order to calculate attendance rates by age.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npops$Region |>\n    unique() |>\n    enframe() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 x 2\n    name value                    \n   <int> <chr>                    \n 1     1 Al Bahah                 \n 2     2 Al Jawf                  \n 3     3 Al Hudud ash Shamaliyah  \n 4     4 Ar Riyadh                \n 5     5 Al Qasim                 \n 6     6 Al Madinah al Munawwarah \n 7     7 Al Mintaqah ash Sharqiyah\n 8     8 Tabuk                    \n 9     9 Jazan                    \n10    10 Ha'il                    \n11    11 'Asir                    \n12    12 Makkah al Mukarramah     \n13    13 Najran                   \n```\n\n\n:::\n\n```{.r .cell-code}\nsmok_1 <- smok |>\n    mutate(directorate_name = recode(directorate_name, \"Qurayyat\" = \"Al-Qurayyat\", \n                                     \"Qunfotha\" = \"AL-Qunfudah\", \n                                     \"AlAhsa\" = \"Al-Ahsa\", \n                                     \"Baha\" = \"Al-Baha\",\n                                     \"Eastern\" = \"Eastern-Region\", \n                                     \"Hafer AlBatin\" = \"Hafr-Al-Batin\",\n                                     \"Northern Borders\" = \"Northern-Borders\",\n                                     \"Qassim\" = \"Al-Qassim\", \n                                     \"Jouf\" = \"Al-Jouf\"\n                                     )) |>\n    left_join(reg_dir_lu, by = c(\"directorate_name\" = \"name\")) \n    #left_join(pops, by = c(\"ADM1_EN\" = \"Region\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npops <- pops |>\n    mutate(age = parse_number(`Single Age Group`))\n\npops$Region |>\n    unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Al Bahah\"                  \"Al Jawf\"                  \n [3] \"Al Hudud ash Shamaliyah\"   \"Ar Riyadh\"                \n [5] \"Al Qasim\"                  \"Al Madinah al Munawwarah\" \n [7] \"Al Mintaqah ash Sharqiyah\" \"Tabuk\"                    \n [9] \"Jazan\"                     \"Ha'il\"                    \n[11] \"'Asir\"                     \"Makkah al Mukarramah\"     \n[13] \"Najran\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\nsmok_pops_region <- smok_1 |>\n    mutate(Gender = str_to_title(patient_gender)) |>\n    count(ADM1_EN, age, Gender) \n\n\n## recode region names (ADM1_EN)\n\n# smok_pops_region |>\n#     mutate(Region = recode(ADM1_EN, \n#                            \"`Asir\" = \"'Asir\", \n#                            \"Ash Sharqiyah\" = \"Al Hudud ash Sharqiyah\", \n#                            \"Al Madinah\" = ))\n\nsmok_pops_region <- smok_pops_region |>\n    full_join(pops, by = c(\"ADM1_EN\" = \"Region\", \"age\", \"Gender\")) \n\n\n\n## sense check\nsmok_pops_region |>\n    count(Gender, ADM1_EN, `18-44`) |>\n    print(n = 42)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 69 x 4\n   Gender ADM1_EN                   `18-44`     n\n   <chr>  <chr>                     <chr>   <int>\n 1 Female 'Asir                     18-44     967\n 2 Female 'Asir                     other    2206\n 3 Female Al Bahah                  18-44     535\n 4 Female Al Bahah                  other    1178\n 5 Female Al Hudud ash Shamaliyah   18-44     216\n 6 Female Al Hudud ash Shamaliyah   other     522\n 7 Female Al Jawf                   18-44     216\n 8 Female Al Jawf                   other     522\n 9 Female Al Madinah                <NA>       17\n10 Female Al Madinah al Munawwarah  18-44     484\n11 Female Al Madinah al Munawwarah  other    1133\n12 Female Al Mintaqah ash Sharqiyah 18-44     648\n13 Female Al Mintaqah ash Sharqiyah other    1568\n14 Female Al Qasim                  18-44     699\n15 Female Al Qasim                  other    1592\n16 Female Al Quassim                <NA>        4\n17 Female Ar Riyad                  <NA>       21\n18 Female Ar Riyadh                 18-44    1241\n19 Female Ar Riyadh                 other    2866\n20 Female Ash Sharqiyah             <NA>       19\n21 Female Ha'il                     18-44     482\n22 Female Ha'il                     other    1045\n23 Female Jazan                     18-44     913\n24 Female Jazan                     other    2270\n25 Female Jizan                     <NA>        5\n26 Female Makkah                    <NA>       23\n27 Female Makkah al Mukarramah      18-44     917\n28 Female Makkah al Mukarramah      other    2224\n29 Female Najran                    18-44     372\n30 Female Najran                    other     821\n31 Female Tabuk                     18-44     376\n32 Female Tabuk                     other     876\n33 Female `Asir                     <NA>       14\n34 Male   'Asir                     18-44     967\n35 Male   'Asir                     other    2293\n36 Male   Al Bahah                  18-44     539\n37 Male   Al Bahah                  other    1228\n38 Male   Al Hudud ash Shamaliyah   18-44     216\n39 Male   Al Hudud ash Shamaliyah   other     520\n40 Male   Al Jawf                   18-44     216\n41 Male   Al Jawf                   other     531\n42 Male   Al Jawf                   <NA>        1\n# i 27 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## 18-44 F\nsmok_18_44 <- smok_pops_region |>\n    filter(Gender == \"Female\", `18-44` == \"18-44\") |>\n    group_by(ADM1_EN) |>\n    reframe(n = n(), \n            sum_pop = sum(Population), \n            rate_100k = 100000 * n / sum_pop)\n\n    smok_18_44_ci <- PHEindicatormethods::phe_rate(smok_18_44, n, sum_pop, multiplier = 100000)\n\nsmok_18_44_ci |>\n    ggplot() +\n    geom_col(aes(reorder(ADM1_EN, -rate_100k), rate_100k), fill = \"goldenrod\") +\n    geom_point(aes(reorder(ADM1_EN, -rate_100k), rate_100k, colour = n)) +\n    geom_linerange(aes(x = ADM1_EN, ymin = lowercl, ymax = uppercl)) +\n    labs(y = \"\", \n         x = \"Region\n         \") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](lookups_files/figure-pdf/calculate smoking rates by region-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n## 15+\n\nsmok_15_ <- smok_pops_region |>\n    filter(`15+` == \"15+\") |>\n    group_by(ADM1_EN) |>\n    reframe(n = n(), \n            sum_pop = sum(Population), \n            rate_100k = 100000 * n / sum_pop)\n\nsmok_15_ci <- PHEindicatormethods::phe_rate(smok_15_, n, sum_pop,  multiplier = 100000)\n\nsmok_15_ci |>\n    ggplot() +\n    geom_point(aes(reorder(ADM1_EN, rate_100k), rate_100k)) +\n    geom_linerange(aes(x = ADM1_EN, ymin = lowercl, ymax = uppercl)) +\n    coord_flip() +\n    labs(x = \"\")\n```\n\n::: {.cell-output-display}\n![](lookups_files/figure-pdf/calculate smoking rates by region-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n## AS specific\n\nsmok_pops_region |>\n    #filter(`15+` == \"15+\") |>\n    group_by(ADM1_EN, `Five-Year Age Group`, Gender) |>\n    reframe(n = n(), \n            sum_pop = sum(Population), \n            rate_100k = 100 * n / sum_pop) |>\n   # select(-c(n, sum_pop)) |>\n    pivot_wider(-c(n, rate_100k), names_from = c(\"Gender\", \"Five-Year Age Group\"), values_from = \"sum_pop\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 x 38\n   ADM1_EN    `Female_0-4` `Male_0-4` `Female_10-14` `Male_10-14` `Female_15-19`\n   <chr>             <int>      <int>          <int>        <int>          <int>\n 1 'Asir             86076      89700          89842        92719          80089\n 2 Al Bahah          13905      14292          15738        16437          13866\n 3 Al Hudud ~        20196      21493          17737        18266          14648\n 4 Al Jawf           35470      36359          29566        30401          23021\n 5 Al Madinah           NA         NA             NA           NA             NA\n 6 Al Madina~        92536      95669          91346        94512          78252\n 7 Al Mintaq~       200425     208376         184743       191018         149977\n 8 Al Qasim          54714      56834          57093        58495          50842\n 9 Al Quassim           NA         NA             NA           NA             NA\n10 Ar Riyad             NA         NA             NA           NA             NA\n11 Ar Riyadh        307991     320698         298933       309250         254888\n12 Ash Sharq~           NA         NA             NA           NA             NA\n13 Ha'il             32737      33782          32674        33511          27449\n14 Jazan             64626      67613          64993        68873          59475\n15 Jizan                NA         NA             NA           NA             NA\n16 Makkah               NA         NA             NA           NA             NA\n17 Makkah al~       281082     292376         299840       314392         270382\n18 Najran            31863      33038          27125        28865          22482\n19 Tabuk             42296      44012          39399        40646          34513\n20 `Asir                NA         NA             NA           NA             NA\n# i 32 more variables: `Male_15-19` <int>, `Female_20-24` <int>,\n#   `Male_20-24` <int>, `Female_25-29` <int>, `Male_25-29` <int>,\n#   `Female_30-34` <int>, `Male_30-34` <int>, `Female_35-39` <int>,\n#   `Male_35-39` <int>, `Female_40-44` <int>, `Male_40-44` <int>,\n#   `Female_45-49` <int>, `Male_45-49` <int>, `Female_5-9` <int>,\n#   `Male_5-9` <int>, `Female_50-54` <int>, `Male_50-54` <int>,\n#   `Female_55-59` <int>, `Male_55-59` <int>, `Female_60-64` <int>, ...\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}